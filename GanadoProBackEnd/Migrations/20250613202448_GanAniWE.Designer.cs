// <auto-generated />
using System;
using GanadoProBackEnd.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GanadoProBackEnd.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250613202448_GanAniWE")]
    partial class GanAniWE
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Clientes", b =>
                {
                    b.Property<int>("Id_Cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Cliente"));

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Entidad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Id_User")
                        .HasColumnType("int");

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Propietario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Upp")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Cliente");

                    b.HasIndex("Id_User");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("GanadoProBackEnd.Models.Animal", b =>
                {
                    b.Property<int>("Id_Animal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Animal"));

                    b.Property<string>("Arete")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CertificadoZootanitario")
                        .HasColumnType("longtext");

                    b.Property<string>("Clasificacion")
                        .HasColumnType("longtext");

                    b.Property<string>("ContanciaGarrapaticida")
                        .HasColumnType("longtext");

                    b.Property<int>("Edad_Meses")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasDefaultValue("EnStock");

                    b.Property<DateTime?>("FechaIngreso")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaSalida")
                        .HasColumnType("datetime(6)");

                    b.Property<byte[]>("FierroCliente")
                        .HasColumnType("longblob");

                    b.Property<string>("FoliGuiaRemoEntrada")
                        .HasColumnType("longtext");

                    b.Property<string>("FoliGuiaRemoSalida")
                        .HasColumnType("longtext");

                    b.Property<string>("FolioTB")
                        .HasColumnType("longtext");

                    b.Property<int?>("Id_Cliente")
                        .HasColumnType("int");

                    b.Property<int?>("Id_Lote")
                        .HasColumnType("int");

                    b.Property<int?>("Id_Rancho")
                        .HasColumnType("int");

                    b.Property<int>("Id_User")
                        .HasColumnType("int");

                    b.Property<string>("MotivoSalida")
                        .HasColumnType("longtext");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("longtext");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UppDestino")
                        .HasColumnType("longtext");

                    b.Property<string>("UppOrigen")
                        .HasColumnType("longtext");

                    b.Property<string>("ValidacionConside_ID")
                        .HasColumnType("longtext");

                    b.HasKey("Id_Animal");

                    b.HasIndex("Id_Cliente");

                    b.HasIndex("Id_Lote");

                    b.HasIndex("Id_Rancho");

                    b.HasIndex("Id_User");

                    b.ToTable("Animales");
                });

            modelBuilder.Entity("GanadoProBackEnd.Models.Fierros", b =>
                {
                    b.Property<int>("Id_Fierro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Fierro"));

                    b.Property<byte[]>("Fierro")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.HasKey("Id_Fierro");

                    b.ToTable("Fierros");
                });

            modelBuilder.Entity("GanadoProBackEnd.Models.Lote", b =>
                {
                    b.Property<int>("Id_Lote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Lote"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasDefaultValue("Disponible");

                    b.Property<DateTime>("Fecha_Creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTime(2025, 6, 13, 20, 24, 47, 539, DateTimeKind.Utc).AddTicks(5632));

                    b.Property<DateTime>("Fecha_Entrada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Fecha_Salida")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Id_Cliente")
                        .HasColumnType("int");

                    b.Property<int>("Id_Rancho")
                        .HasColumnType("int");

                    b.Property<int>("Id_User")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext");

                    b.Property<int>("Remo")
                        .HasColumnType("int");

                    b.HasKey("Id_Lote");

                    b.HasIndex("Id_Cliente");

                    b.HasIndex("Id_Rancho");

                    b.HasIndex("Id_User");

                    b.ToTable("Lotes");
                });

            modelBuilder.Entity("GanadoProBackEnd.Models.Rancho", b =>
                {
                    b.Property<int>("Id_Rancho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Rancho"));

                    b.Property<int>("Id_User")
                        .HasColumnType("int");

                    b.Property<string>("NombreRancho")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_Rancho");

                    b.HasIndex("Id_User");

                    b.ToTable("Ranchos");
                });

            modelBuilder.Entity("GanadoProBackEnd.Models.User", b =>
                {
                    b.Property<int>("Id_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_User"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Upp")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id_User");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GanadoProBackEnd.Models.Venta", b =>
                {
                    b.Property<int>("Id_Venta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Venta"));

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FolioGuiaRemo")
                        .HasColumnType("longtext");

                    b.Property<int>("Id_Cliente")
                        .HasColumnType("int");

                    b.Property<int>("Id_Productor")
                        .HasColumnType("int");

                    b.Property<int>("Id_Rancho")
                        .HasColumnType("int");

                    b.Property<int>("Id_User")
                        .HasColumnType("int");

                    b.Property<int>("TipoVenta")
                        .HasColumnType("int");

                    b.HasKey("Id_Venta");

                    b.HasIndex("Id_Cliente");

                    b.HasIndex("Id_Rancho");

                    b.HasIndex("Id_User");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("VentaLotes", b =>
                {
                    b.Property<int>("Id_Venta")
                        .HasColumnType("int");

                    b.Property<int>("Id_Lote")
                        .HasColumnType("int");

                    b.HasKey("Id_Venta", "Id_Lote");

                    b.HasIndex("Id_Lote");

                    b.ToTable("VentaLotes");
                });

            modelBuilder.Entity("Clientes", b =>
                {
                    b.HasOne("GanadoProBackEnd.Models.User", "User")
                        .WithMany("Clientes")
                        .HasForeignKey("Id_User")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GanadoProBackEnd.Models.Animal", b =>
                {
                    b.HasOne("Clientes", "Clientes")
                        .WithMany("Animales")
                        .HasForeignKey("Id_Cliente")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GanadoProBackEnd.Models.Lote", "Lote")
                        .WithMany("Animales")
                        .HasForeignKey("Id_Lote")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GanadoProBackEnd.Models.Rancho", "Rancho")
                        .WithMany()
                        .HasForeignKey("Id_Rancho")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GanadoProBackEnd.Models.User", "User")
                        .WithMany("Animals")
                        .HasForeignKey("Id_User")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Clientes");

                    b.Navigation("Lote");

                    b.Navigation("Rancho");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GanadoProBackEnd.Models.Lote", b =>
                {
                    b.HasOne("Clientes", "Cliente")
                        .WithMany("Lotes")
                        .HasForeignKey("Id_Cliente");

                    b.HasOne("GanadoProBackEnd.Models.Rancho", "Rancho")
                        .WithMany("Lotes")
                        .HasForeignKey("Id_Rancho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GanadoProBackEnd.Models.User", "User")
                        .WithMany("Lotes")
                        .HasForeignKey("Id_User")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Rancho");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GanadoProBackEnd.Models.Rancho", b =>
                {
                    b.HasOne("GanadoProBackEnd.Models.User", "User")
                        .WithMany("Ranchos")
                        .HasForeignKey("Id_User")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GanadoProBackEnd.Models.Venta", b =>
                {
                    b.HasOne("Clientes", "Cliente")
                        .WithMany("Ventas")
                        .HasForeignKey("Id_Cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GanadoProBackEnd.Models.Rancho", "RanchoOrigen")
                        .WithMany()
                        .HasForeignKey("Id_Rancho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GanadoProBackEnd.Models.User", "User")
                        .WithMany("Ventas")
                        .HasForeignKey("Id_User")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("RanchoOrigen");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VentaLotes", b =>
                {
                    b.HasOne("GanadoProBackEnd.Models.Lote", null)
                        .WithMany()
                        .HasForeignKey("Id_Lote")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GanadoProBackEnd.Models.Venta", null)
                        .WithMany()
                        .HasForeignKey("Id_Venta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Clientes", b =>
                {
                    b.Navigation("Animales");

                    b.Navigation("Lotes");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("GanadoProBackEnd.Models.Lote", b =>
                {
                    b.Navigation("Animales");
                });

            modelBuilder.Entity("GanadoProBackEnd.Models.Rancho", b =>
                {
                    b.Navigation("Lotes");
                });

            modelBuilder.Entity("GanadoProBackEnd.Models.User", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("Clientes");

                    b.Navigation("Lotes");

                    b.Navigation("Ranchos");

                    b.Navigation("Ventas");
                });
#pragma warning restore 612, 618
        }
    }
}
